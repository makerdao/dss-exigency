pragma solidity ^0.5.12;

// https://github.com/makerdao/sai/blob/master/src/tub.sol
contract SaiTubAbstract {
    function sai() public view returns (address);
    function sin() public view returns (address);
    function skr() public view returns (address);
    function gem() public view returns (address);
    function gov() public view returns (address);
    function vox() public view returns (address);
    function pip() public view returns (address);
    function pep() public view returns (address);
    function tap() public view returns (address);
    function pit() public view returns (address);
    function axe() public view returns (uint256);
    function cap() public view returns (uint256);
    function mat() public view returns (uint256);
    function tax() public view returns (uint256);
    function fee() public view returns (uint256);
    function gap() public view returns (uint256);
    function off() public view returns (bool);
    function out() public view returns (bool);
    function fit() public view returns (uint256);
    function rho() public view returns (uint256);
    function rum() public view returns (uint256);
    function cupi() public view returns (uint256);
    function cups(bytes32) public view returns (address, uint256, uint256, uint256);
    function lad(bytes32) public view returns (address);
    function ink(bytes32) public view returns (address);
    function tab(bytes32) public view returns (uint256);
    function rap(bytes32) public returns (uint256);
    function din() public returns (uint256);
    function air() public view returns (uint256);
    function pie() public view returns (uint256);
    function era() public view returns (uint256);
    function mold(bytes32, uint256) public;
    function setPip(address) public;
    function setPep(address) public;
    function setVox(address) public;
    function turn(address) public;
    function per() public view returns (uint256);
    function ask(uint256) public view returns (uint256);
    function bid(uint256) public view returns (uint256);
    function join(uint256) public;
    function exit(uint256) public;
    function chi() public returns (uint256);
    function rhi() public returns (uint256);
    function drip() public;
    function tag() public view returns (uint256);
    function safe(bytes32) public returns (bool);
    function open() public returns (bytes32);
    function give(bytes32, address) public;
    function lock(bytes32, uint256) public;
    function free(bytes32, uint256) public;
    function draw(bytes32, uint256) public;
    function wipe(bytes32, uint256) public;
    function shut(bytes32) public;
    function bite(bytes32) public;
    function cage(uint256, uint256) public;
    function flow() public;
    function authority() public view returns (address);
    function owner() public view returns (address);
    function setOwner(address) public;
    function setAuthority(address) public;
}
